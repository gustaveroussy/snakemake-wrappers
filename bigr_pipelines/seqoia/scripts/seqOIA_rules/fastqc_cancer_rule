rule fastqc_cancer:
	input:
		lambda wildcards: expand(ancient("{export_dir}/{sequenceur}/{run}/ped_genomiser_generation.done"), export_dir=export_dir, sequenceur = config["general_informations"][str(wildcards.sample).split('_')[1]]["SEQUENCEUR"], run=config["general_informations"][str(wildcards.sample).split('_')[1]]["RUN"])
	output:
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc/fastqc_data.txt",
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc/summary.txt",
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc/Icons",
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc/Images",
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc.html",
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc/fastqc_report.html",
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc/fastqc.fo",
		"{basedir}/{analysis}/{sample}/{sample}_{mate}_001_fastqc.zip"
	resources: io=3
	log:
		"{basedir}/{analysis}/log/{sample}/{sample}_{mate}_fastqc.log"
	params:
		fastqc_options = config["fastqc"]["OPTIONS"],
		run = lambda wildcards: config["general_informations"][str(wildcards.sample).split('_')[1]]["RUN"],
		sequenceur = lambda wildcards: config["general_informations"][str(wildcards.sample).split('_')[1]]["SEQUENCEUR"]
	shell:
		"""
		singularity exec -B /mnt/beegfs/database/bioinfo/seqoia:/mnt/beegfs/database/bioinfo/seqoia -B /mnt/beegfs/scratch/:/mnt/beegfs/scratch/ /mnt/beegfs/software/seqoia/singularity/fastqc_0.11.5-5.sif bash -c "fastqc -o {wildcards.basedir}/{wildcards.analysis}/{wildcards.sample} {export_dir}/{params.sequenceur}/{params.run}/fastq/{wildcards.sample}_{wildcards.mate}_001.fastq.gz  {params.fastqc_options} 2>&1 | tee -a {log}"
		"""
