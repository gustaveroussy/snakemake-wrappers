rule sambamba_merge_wts:
	input:
		flag = lambda wildcards: expand("{basedir}/{analysis}/{sample}/{sample}_star_sambamba_slice.done", basedir=basedir, analysis=wildcards.analysis, sample=sample_ids_star)
	output:
		temp("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_wts_merged.bam")
	priority: 47
	resources: io=10
	log:
		"{basedir}/{analysis}/log/{prefix}/chr_{index}/{prefix}_chr_{index}_wts_sambamba_merge.log"
	params:
		sambamba_merge_options = config["sambamba_merge"]["OPTIONS"]
	run:	
		input = []
		analysis_id = analysis
		sample_regex=r"^" + wildcards.prefix + "_(L\d_\d+)$"
		for sample in sample_ids:
			if re.search(sample_regex, sample):
				file_bam = []
				file_bam = [f for f in os.listdir("{}/{}/{}/".format(basedir, analysis_id, sample)) if re.match(r'^.+_chr_'+ wildcards.index +'.bam$', f)]
				file_bam[0] = "{}/{}/{}/".format(basedir, analysis_id, sample) + file_bam[0]
				input = input + file_bam
		print(len(input))
		if(len(input)>1):
			input = str(input).replace("[","").replace("]","").replace(",","").replace("'","")
			print(input)
			cmd = 'singularity exec -B /mnt/beegfs/database/bioinfo/seqoia:/mnt/beegfs/database/bioinfo/seqoia -B /mnt/beegfs/scratch/:/mnt/beegfs/scratch/ /mnt/beegfs/software/seqoia/singularity/sambamba_0.7.1-static.sif bash -c "sambamba merge {params.sambamba_merge_options} {output} {input} 2>&1 | tee -a {log}"'
			shell(cmd)
		else:
			cmd = "cp {input} {output} 2>&1 | tee -a {log}"
			shell(cmd)