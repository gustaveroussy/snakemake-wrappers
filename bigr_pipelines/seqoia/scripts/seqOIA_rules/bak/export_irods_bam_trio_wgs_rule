rule export_irods_bam_trio_wgs:
        input:
                vcf = "{export_dir}/{analysis}/{analysis}_final.vcf",
        	json = "{export_dir}/{analysis}/{analysis}.json",
		bam = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_markdup.temp.bam", analysis=wildcards.analysis, prefix = wildcards.prefix, index=index),
		bai = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_markdup.temp.bam.bai", analysis=wildcards.analysis, prefix = wildcards.prefix, index=index)
	output:
                flag = "{export_dir}/{analysis}/{prefix}_bam_export.done"
	resources: io = 35
	log:	
		basedir+"/{analysis}/log/{analysis}_export_bam_irods.log"
	run:
                bam = input.bam
                bai = input.bai
                bam_list = []
                bai_list = []
                for k in bam:
                       k = k.split('/')
                       k = k[0:2] + ["."] + k[2:]
                       bam_list.append("/".join(k))
                for k in bai:
                       k = k.split('/')
                       k = k[0:2] + ["."] + k[2:]
                       bai_list.append("/".join(k))
                bai_string = " ".join(bai_list)
                bam_string = " ".join(bam_list)
                command = "rsync -Paz --relative " + bai_string + " {wildcards.export_dir}/{wildcards.analysis}/ && rsync -Paz --relative " + bam_string + " {wildcards.export_dir}/{wildcards.analysis}/ && touch {output.flag} 2>&1 | tee -a {log}"
                shell(command)     
