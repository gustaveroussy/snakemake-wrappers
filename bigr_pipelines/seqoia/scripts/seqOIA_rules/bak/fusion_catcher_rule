rule fusion_catcher:
	input:
		R1 = lambda wildcards: expand("{export_dir}/{sequenceur}/{run}/fastq/{sample}_R1_001.fastq.gz",export_dir=export_dir,sequenceur = config["general_informations"]["WTS"]["SEQUENCEUR"], run = config["general_informations"]["WTS"]["RUN"], sample=sample_ids_star),
		R2 = lambda wildcards: expand("{export_dir}/{sequenceur}/{run}/fastq/{sample}_R2_001.fastq.gz",export_dir=export_dir,sequenceur = config["general_informations"]["WTS"]["SEQUENCEUR"], run = config["general_informations"]["WTS"]["RUN"], sample=sample_ids_star)
	output:
		folder = "{basedir}/{analysis}/{sample}/fusion_catcher/",
		file = temp("{basedir}/{analysis}/{sample}/fusion_catcher/final-list_candidate-fusion-genes.txt")
	resources: io=30
	log:
		"{basedir}/{analysis}/log/{sample}/{sample}_fusion_catcher.log"
	params:
		fusion_catcher_options = config["fusion_catcher"]["OPTIONS"],
		database = config["fusion_catcher"]["ANNOT"],
	run:
		files_R1 = str(input.R1).replace(" ",",").replace("[","").replace("]","")
		files_R2 = str(input.R2).replace(" ",",").replace("[","").replace("]","")
		cmd = "fusioncatcher {params.fusion_catcher_options} -d {params.database} -i " + files_R1 + "," + files_R2 + " -o {output.folder} 2>&1 | tee -a {log}"
		shell(cmd)
