rule sambamba_merge_wgs:
	input:
		flag = lambda wildcards: expand("data/{analysis}/{sample}/{sample}_sambamba_slice.done",analysis=wildcards.analysis, sample=sample_ids)
	output:
		temp("data/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_merged.bam")
	priority: 47
	resources: io=10
	log:
		"data/{analysis}/log/{prefix}/chr_{index}/{prefix}_chr_{index}_sambamba_merge.log"
	params:
		sambamba_merge_options = config["sambamba_merge"]["OPTIONS"]
	run:	
		input = []
		analysis_id = analysis
		sample_regex=r"^" + wildcards.prefix + "_(L\d_\d+)$"
		print("sample_regex:", sample_regex)
		print("index :", r'^.+_chr_'+ wildcards.index +'.bam$')
		for sample in sample_ids:
			if re.search(sample_regex, sample):
				file_bam = []
				print(os.listdir("data/{}/{}/".format(analysis_id, sample)))
				file_bam = [f for f in os.listdir("data/{}/{}/".format(analysis_id, sample)) if re.match(r'^.+_chr_'+ wildcards.index +'.bam$', f)]
				print(file_bam)
				file_bam[0] = "data/{}/{}/".format(analysis_id, sample) + file_bam[0]
				input = input + file_bam
		print(len(input))
		cmd = "rsync -Paz " + str(input[0]) + " {output} 2>&1 | tee -a {log}"
		print(cmd)
		#cmd = "sambamba merge {params.sambamba_merge_options} {output} " + input + " 2>&1 | tee -a {log}"
		shell(cmd)
