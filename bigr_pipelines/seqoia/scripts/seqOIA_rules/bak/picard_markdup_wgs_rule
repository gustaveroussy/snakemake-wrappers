rule picard_markdup_wgs:
	input:
		bam = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_merged.bam", basedir=basedir, analysis=wildcards.analysis, prefix=wildcards.prefix, index=wildcards.index)
	output:
		marked = "{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_markdup.temp.bam",
		metrics = "{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_metrics.txt",
	resources: io=10
	log:
		"{basedir}/{analysis}/log/{prefix}/chr_{index}/{prefix}_chr_{index}_picard_markdup.log"
	params:
		picard_markdup_options = config["picard_markdup"]["OPTIONS"]
	shell:
		"java -Xmx17000m -Xms17000m -XX:ParallelGCThreads=8 -XX:+AggressiveHeap -jar /usr/share/java/picard.jar MarkDuplicates {params.picard_markdup_options} I={input.bam} O={output.marked} M={output.metrics} 2>&1 | tee -a {log}"

