rule json_export_cancer_wgs:
	input:
		vcf = "{export_dir}/{analysis}/{analysis}_final.vcf",
		config = "{export_dir}/{analysis}/config/",
		CNV = "{export_dir}/{analysis}/CNV",
		qc = "{export_dir}/{analysis}/{analysis}_qc_lab.csv",
		tar_output = "{export_dir}/{analysis}/{analysis}.tar.gz",
		script_python = lambda wildcards: expand("{script_dir}/json_export_creation.py", script_dir=script_dir),
		tmb = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/charge_mut/TMB_result.txt",basedir=basedir,analysis=wildcards.analysis, prefix=wes_tumor),
		msi = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/Msisensor.txt",basedir=basedir,analysis=wildcards.analysis,prefix=vcf_id),
		facet_bed = lambda wildcards: expand("{basedir}/{analysis}/Facet/{analysis}_facet_result.bed",basedir=basedir,analysis=wildcards.analysis),
		bam_wgs  = lambda wildcards: expand("{export_dir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_markdup.bam", export_dir=export_dir, analysis=wildcards.analysis, prefix = [wgs_constit,wes_tumor], index=index),
		bai_wgs = lambda wildcards: expand("{export_dir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_markdup.bam.bai", export_dir=export_dir, analysis=wildcards.analysis, prefix = [wgs_constit,wes_tumor], index=index),
	priority: 40
	output:
		"{export_dir}/{analysis}/{analysis}.json"
	log:	
		basedir+"/{analysis}/log/json_export_irods.log"
	params:
		proband = config["general_informations"]["WGS-C"]["ID"].split("_S")[0],
		pipeline_config = config["general_informations"]["PIPELINE_CONFIG"],
		sequenceur = config["general_informations"]["WGS-C"]["SEQUENCEUR"],
		run = config["general_informations"]["WGS-C"]["RUN"]
	shell:
		"python3 {input.script_python} -v {input.vcf} -c {input.config} -q {input.qc} -tmb {input.tmb} -msi {input.msi} -f {input.facet_bed} -tar {input.tar_output} -bam {input.bam_wgs} -bai {input.bam_wgs} -cnv {input.CNV} -j {wildcards.export_dir}/{params.sequenceur}/{params.run}/json/{params.proband}.json -o {output} 2>&1 | tee -a {log}"
