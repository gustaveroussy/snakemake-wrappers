rule bcftools_merge_wts_wes:
	input:
		vcf_wts = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_wts_VTN.vcf.gz",  basedir=basedir, analysis=wildcards.analysis,prefix=wts,index=wildcards.index),
		vcf_wts_tbi = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_wts_VTN.vcf.gz.tbi",  basedir=basedir, analysis=wildcards.analysis,prefix=wts,index=wildcards.index),
		vcf_wgs = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_VTN.vcf.gz",  basedir=basedir, analysis=wildcards.analysis,prefix=wgs_constit,index=wildcards.index),
		vcf_wgs_tbi = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_VTN.vcf.gz.tbi",  basedir=basedir, analysis=wildcards.analysis,prefix=wgs_constit,index=wildcards.index),
		vcf_mutect_wes = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_qual_changed_wes.vcf.gz",  basedir=basedir, analysis=wildcards.analysis,prefix=wes_tumor,index=wildcards.index),
		vcf_mutect_wes_tbi = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_qual_changed_wes.vcf.gz.tbi",  basedir=basedir, analysis=wildcards.analysis,prefix=wes_tumor,index=wildcards.index)
	output:
		temp("{basedir}/{analysis}/chr_{index}/{analysis}_chr_{index}_genotype.vcf")
	log:
		"{basedir}/{analysis}/log/chr_{index}/{analysis}_chr_{index}_bcftools_merge_wts_wes_database.log"
	shell:
		'bcftools merge -m none {input.vcf_wts} {input.vcf_mutect_wes} {input.vcf_wgs} -O v -o {output} 2>&1 | tee -a {log}'
