rule gatk_haplotype_caller_wes:
	input:
		bam = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_bqsr.bam", basedir=basedir, analysis=wildcards.analysis, index=wildcards.index, prefix=config["general_informations"]["WES-T"]["ID"]),
		bai = lambda wildcards: expand("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_bqsr.bai", basedir=basedir, analysis=wildcards.analysis, index=wildcards.index, prefix=config["general_informations"]["WES-T"]["ID"])
	output:
		vcf = temp("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_wes.vcf"),
		idx = temp("{basedir}/{analysis}/{prefix}/chr_{index}/{prefix}_chr_{index}_wes.vcf.idx")
	resources: io=1
	log:
		"{basedir}/{analysis}/log/{prefix}/chr_{index}/{prefix}_chr_{index}_haplotype_caller.log"
	params:
		reference = config["general_informations"]["FASTA_FILE"],
		gatk_haplotype_caller_options = config["gatk_haplotype_caller_wes"]["OPTIONS"]
	shell:
		'java -Xmx11500m -Xms11500m -XX:ParallelGCThreads=2 -XX:+AggressiveHeap -jar /usr/share/java/gatk-package-4.1.0.0-local.jar HaplotypeCaller {params.gatk_haplotype_caller_options} -I {input.bam} -O {output.vcf} -R {params.reference} -L {wildcards.index} 2>&1 | tee -a {log}'

