rule bcl2fastq_wgs:
	input:
		runfolder = lambda wildcards: expand("{input_path}/{sequenceur}/{run}/", input_path=input_path, sequenceur=wildcards.sequenceur, run=wildcards.run),
		flag = "{export_path}/{sequenceur}/{run}/check_bcl.done",
		sample_sheet = ancient(lambda wildcards: expand("{input_path}/sample_sheet/{run}.csv", input_path=input_path,run=wildcards.run))
	output:
		"{export_path}/{sequenceur}/{run}/fastq/{lane}_{surface}{swath}.done"
	resources: io=38
	params:
		bcl2fastq_wgs_options = config["bcl2fastq_wgs"]["OPTIONS"]
	log:
		"{export_path}/{sequenceur}/{run}/log/bcl2fastq/{lane}_{surface}{swath}_bcl2fastq.log"
	shell:
		"bcl2fastq {params.bcl2fastq_wgs_options} -R {input.runfolder} -o {wildcards.export_path}/{wildcards.sequenceur}/{wildcards.run}/fastq/{wildcards.lane}_{wildcards.surface}{wildcards.swath} --sample-sheet {input.sample_sheet} --tiles {wildcards.lane}_{wildcards.surface}{wildcards.swath} 2>&1 | tee -a {log} && touch {output}"
