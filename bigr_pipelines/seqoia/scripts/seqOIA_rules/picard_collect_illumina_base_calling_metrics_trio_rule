rule picard_collect_illumina_base_calling_metrics_trio:
	input:
		basecalls = lambda wildcards: expand("{input_dir}/{sequenceur}/{run}/Data/Intensities/BaseCalls/",sequenceur=str(wildcards.run).split("_")[1],run=wildcards.run)
	output:
		"{basedir}/{analysis}/{sequenceur}/{run}/L{lane}/L{lane}_illumina_metrics.txt"
	resources: io=2
	log:
		"{basedir}/{analysis}/log/{sequenceur}/{run}/L{lane}/L{lane}_illumina_metrics.txt"
	params:
		picard_collect_illumina_metrics_options = lambda wildcards: config["picard_collect_illumina_metrics"]["OPTIONS"][str(wildcards.run)]
	shell:
		"java -Xmx7500m -Xms7500m -XX:ParallelGCThreads=2 -XX:+AggressiveHeap -jar /usr/share/java/GenomeAnalysisTK.jar CollectIlluminaBasecallingMetrics {params.picard_collect_illumina_metrics_options} -B={input.basecalls} -L=00{wildcards.lane} -O={output} 2>&1 | tee -a {log}"

