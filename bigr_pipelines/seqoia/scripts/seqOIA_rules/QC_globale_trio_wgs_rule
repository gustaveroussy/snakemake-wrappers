rule QC_globale_trio_wgs:
	input:
		qc = expand("{basedir}/{analysis}/{prefix}/{prefix}_qc_stat.csv", basedir=basedir, analysis=analysis, prefix=prefix),
		snpeff = expand("{basedir}/{analysis}/chr_{index}/{analysis}_chr_{index}_snpeff_stat.html", basedir=basedir, analysis=analysis, index=autosome),
		variant = expand(["{basedir}/{analysis}/chr_{index}/{analysis}_chr_{index}_variant.variant_calling_summary_metrics", "{basedir}/{analysis}/chr_{index}/{analysis}_chr_{index}_variant.variant_calling_detail_metrics"], basedir=basedir, analysis=analysis, index=index),
		mende_stat = "{basedir}/{analysis}/mendelian/{analysis}_mendelian_stats.txt",
		mende_output = "{basedir}/{analysis}/mendelian/{analysis}_bcftools_mendelian_value.txt",
		script_python = lambda wildcards: expand("{script_dir}/QC_globale_trio.py", script_dir = script_dir)
	output:
		qc = "{basedir}/{analysis}/{analysis}_qc.csv"
	log:
		"{basedir}/{analysis}/log/{analysis}_qc_globale.log"
	params:
		pipeline_version = config["general_informations"]["ID_PIPELINE"]
	run:
		run = []
		for k in prefix:
			run.append(config["general_informations"][k.split('_')[0]]["RUN"])
		run = set(run)
		run = list(run)
		run = str(run).replace(",","").replace("]","").replace("[","").replace("'","")
		cmd = "python3 {input.script_python} -r " + str(run) + " -m {input.mende_output} -ms {input.mende_stat} -i {input.qc} -vm {input.variant} -p {params.pipeline_version} -s {input.snpeff} -o {output} 2>&1 | tee -a {log}"
		shell(cmd)
