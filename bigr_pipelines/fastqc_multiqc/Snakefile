import os
import sys
from pathlib import Path
from snakemake.utils import min_version
min_version("7.0")


worflow_source_dir = Path(snakemake.workflow.srcdir("."))
common = str(worflow_source_dir / ".." / "common" / "python")
sys.path.append(common)


from dataframes import *
from file_manager import *
from files_linker import *
from graphics import *
from write_yaml import *
from messages import message

from snakemake.utils import min_version
from snakemake.shell import shell
min_version("6.0")

logging.basicConfig(
    filename="snakemake.fastqc_multiqc.log",
    filemode="w",
    level=logging.DEBUG
)

default_config = read_yaml(worflow_source_dir / "config.yaml")
config_path = get_config(default_config)
design = get_design(os.getcwd(), search_fastq_files)
design.columns = ["Sample_id", "Upstream_file"]

fastq_links = link_fq(
    design.Sample_id,
    design.Upstream_file,
)

configfile: config_path
container: "docker://continuumio/miniconda3:4.4.10"
    

##################
### Flag rules ###
##################

onsuccess:
    shell("touch DONE && rm --force --verbose ON_GOING ERROR")

onerror:
    shell("touch ERROR && rm --force --verbose ON_GOING DONE")

onstart:
    shell("touch ON_GOING && rm --force --verbose ERROR DONE")


##################################
### Gather all quality reports ###
##################################


include: "rules/003.multiqc.smk"


#########################################
### Assess quality of each fastq file ###
#########################################


include: "rules/001.fastqc.smk"
include: "rules/002.fastq_screen.smk"


#################################################
### Gather files from iRODS or mounting point ###
#################################################


include: "rules/000.copy.smk"


prefix = "multiqc"


rule target:
    input:
        f"{prefix}/multiqc.html"