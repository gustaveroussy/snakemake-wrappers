import sys
from pathlib import Path

worflow_source_dir = Path(next(iter(workflow.get_sources()))).absolute().parent
common = str(worflow_source_dir / "../../../../bigr_pipelines/common/python")
sys.path.append(common)

from file_manager import *

default_config_gatk_bqsr = {
    "threads": 20,
    "genome": "reference/genome.fasta",
    "dbsnp": "reference/dbsnp.vcf.gz"
}

try:
    if config == dict():
        config = default_config_gatk_bqsr
except NameError:
    config = default_config_gatk_bqsr

"""
This rule applies the BQSR to the mapped reads
"""
rule gatk_apply_baserecalibrator:
    input:
        bam="mapped/{sample}.bam",
        bam_index="mapped/{sample}.bam.bai",
        ref=config["genome"],
        ref_idx=get_fai(config["genome"]),
        ref_dict=get_dict(config["genome"]),
        recal_table="gatk/recal_data_table/{sample}.grp"
    output:
        bam="gatk/recal_bam/{sample}.bam"
    message: "Applying BQSR on {wildcards.sample} with GATK"
    threads: 1
    resources:
        mem_mb=lambda wildcards, attempt: min(attempt * 4096, 20240),
        time_min=lambda wildcards, attempt: attempt * 60,
        tmpdir="tmp"
    log:
        "logs/gatk/applybqsr/{sample}.log"
    params:
        extra=config.get("apply_base_recal_extra", "")
    wrapper:
        "bio/gatk/applybqsr"


"""
This rule computes BQSR on mapped reads, given a knoledge database
"""
rule gatk_compute_baserecalibration_table:
    input:
        bam="mapped/{sample}.bam",
        bam_index="mapped/{sample}.bam.bai",
        ref=config["genome"],
        ref_idx=get_fai(config["genome"]),
        ref_dict=get_dict(config["genome"]),
        known=config["dbsnp"],
        known_idx=get_tbi(config["dbsnp"])
    output:
        recal_table=temp("gatk/recal_data_table/{sample}.grp")
    message: "Compute BQSR table from {wildcards.sample} with GATK"
    threads: config.get("threads", 20)
    resources:
        mem_mb=lambda wildcards, attempt: min(attempt * 4048, 15360),
        time_min=lambda wildcards, attempt: attempt * 120,
        tmpdir="tmp"
    log:
        "logs/gatk3/compute_bqsr/{sample}.log"
    params:
        extra=""
    wrapper:
        "bio/gatk/baserecalibrator"
