default_config_maftools = {
    "genome": "GRCh38",
    "estimate_extra": "nTry=3",

}


"""
Compute cosine similarity with known mutational signatures
"""
rule maftools_cosine_similarity:
    pass

"""
Compute signatures
"""
rule maftools_signatures:
    pass

"""
Build the trinucleotide matrix for signature analysis, on GRCh27
"""
rule maftools_trinucleotidematrix_hg19:
    input:
        rds="maf/maftools_samples/{sample}/maf.RDS"
    output:
        tsv="maf/maftools_samples/{sample}/trinucleotide_matrix_GRCh27.tsv",
        png="maf/maftools_samples/{sample}/trinucleotide_signtures_hg19.png",
        rds="maf/maftools_samples/{sample}/trinucleotide_matrix_GRCh27.RDS",
    message: "Computing trinucleotide matrices for {wildcards.sample}"
    threads: 1
    resources:
        mem_mb=lambda wildcards, attempt: attempt * 1024,
        time_min=lambda wildcards, attempt: attempt * 15,
        tmpdir="tmp"
    log:
        "logs/maftools/trinucleotide_matrix/{sample}.log"
    params:
        estimate_extra=config.get("estimate_extra", "nTry=3")
    wrapper:
        "bio/maftools/trinucleotidematrix_hg19"


"""
Build the trinucleotide matrix for signature analysis, on GRCh38
"""
rule maftools_trinucleotidematrix_hg38:
    input:
        rds="maf/maftools_samples/{sample}/maf.RDS"
    output:
        tsv="maf/maftools_samples/{sample}/trinucleotide_matrix_hg38.tsv",
        png="maf/maftools_samples/{sample}/trinucleotide_signtures_hg38.png",
        rds="maf/maftools_samples/{sample}/trinucleotide_matrix_hg38.RDS",
    message: "Computing trinucleotide matrices for {wildcards.sample}"
    threads: 1
    resources:
        mem_mb=lambda wildcards, attempt: attempt * 1024,
        time_min=lambda wildcards, attempt: attempt * 15,
        tmpdir="tmp"
    log:
        "logs/maftools/trinucleotide_matrix/{sample}.log"
    params:
        estimate_extra=config.get("estimate_extra", "nTry=3")
    wrapper:
        "bio/maftools/trinucleotidematrix_hg38"


"""
Load a maf file into R for further MAFtools analysis
"""
rule maftools_readmaf:
    input:
        "maf/translated/{sample}.maf"
    output:
        rds="maf/maftools_samples/{sample}/maf.RDS",
        summary=temp("maf/maftools_samples/{sample}/maf_summary.txt")
    message:
        "Loading {wildcards.sample} into R with MAFtools"
    threads: 1
    resources:
        mem_mb=lambda wildcards, attempt: attempt * 1024,
        time_min=lambda wildcards, attempt: attempt * 15,
        tmpdir="tmp"
    params:
        summay_prefix=lambda w: f"maf/maftools_samples/{w.sample}/maf"
    wrapper:
        "bio/maftools/readmaf"


"""
SnpEff contains multiple variants effects, given the wide range of biology
possibilities. MAFtools keeps only a set of six classes, or its graphs would
become unreadable.
This rule makes the translation
"""
rule maftools_rename_snpeff_effect:
    input:
        maf="maf/maftools/{sample}.maf"
    output:
        maf=temp("maf/translated/{sample}.maf")
    message: "Changing snpeff effects in {wildcards.sample} for MAFtools"
    threads: 1
    resources:
        mem_mb=lambda wildcards, attempt: attempt * 1024,
        time_min=lambda wildcards, attempt: attempt * 15,
        tmpdir="tmp"
    log:
        "logs/maftools/translated/{sample}.log"
    wrapper:
        "bio/maftools/translate_snpeff_maf_effect"
