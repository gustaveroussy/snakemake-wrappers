.. _`bio/clusterProfiler/enrichNCG`:

NCG ENRICHMENT
==============

Perform enrichment analysis on Network of Cancer Gene


Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_enrichNCG:
        input:
            rds = "geneList.RDS"
        output:
            rds = "enrichNCG.RDS",
            tsv = "enrichNCG.tsv"
        params:
            enrichDO_extra = "ont = 'DOLite'"
        wrapper:
            "0.75.0-753-g336864c10/bio/clusterProfiler/enrichNCG"

Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bioconda:bioconductor-clusterprofiler=3.14.0``
* ``bioconda:bioconductor-org.hs.eg.db=3.10.0``
* ``bioconda:bioconductor-dose=3.12.0``

Input/Output
------------
**Input:**

* A geneList object as RDS

**Output:**

* A RDS object containing the enrichment based on NCG
* A TSV file containing the enrichment based on NCG



Notes
-----

The geneList object if described in the
DESeq2_to_geneList wrapper

Parameters:
  * enrichNCG_extra: Extra parameters for enrichNCG, besides "gene", and "readable"
  * organism: Either Hs or Mm



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: R

    #!/usr/bin/R

    # This script takes a geneList object and performs
    # an enrichment analysis based on NCG database

    # __author__ = "Thibault Dayris"
    # __copyright__ = "Copyright 2020, Thibault Dayris"
    # __email__ = "thibault.dayris@gustaveroussy.fr"
    # __license__ = "MIT"

    # Sink the stderr and stdout to the snakemake log file
    # https://stackoverflow.com/a/48173272
    log.file<-file(snakemake@log[[1]],open="wt");
    base::sink(log.file);
    base::sink(log.file,type="message");

    # Perform gene enrichment
    base::library(package = "DOSE", quietly = TRUE);
    base::library(package = "clusterProfiler", quietly = TRUE);
    # Loading databases
    base::library(package = "org.Hs.eg.db", quietly = TRUE);

    # Loading input dataset
    geneList <- base::readRDS(
      file = snakemake@input[["rds"]]
    );

    extra <- "gene = base::names(geneList), readable = TRUE";
    if ("enrichNCG_extra" %in% snakemake@params) {
      extra <- base::paste(
        extra,
        snakemake@params[["enrichNCG_extra"]],
        sep = ", "
      )
    }

    command <- base::paste0(
      "DOSE::enrichNCG(",
      extra,
      ")"
    );
    base::message("Libraries and datasets loaded");
    base::message(command);

    # Performing DOSE enrichment
    encg <- base::eval(
      base::parse(
        text = command
      )
    );

    # Saving results
    base::saveRDS(
      obj = encg,
      file = snakemake@output[["rds"]]
    );

    utils::write.table(
      x = encg,
      file = snakemake@output[["tsv"]]
    );

    # Proper syntax to close the connection for the log file
    # but could be optional for Snakemake wrapper
    base::sink(type="message");
    base::sink();
