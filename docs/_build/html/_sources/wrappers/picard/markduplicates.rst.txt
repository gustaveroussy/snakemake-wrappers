.. _`picard MarkDuplicates`:

PICARD MARKDUPLICATES
=====================

Mark PCR and optical duplicates with picard tools.




Software dependencies
---------------------


* picard ==2.23.4




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule mark_duplicates:
        input:
            "mapped/{sample}.bam"
        output:
            bam="dedup/{sample}.bam",
            metrics="dedup/{sample}.metrics.txt"
        log:
            "logs/picard/dedup/{sample}.log"
        params:
            "REMOVE_DUPLICATES=true"
        wrapper:
            "0.66.0-280-g9f0281de/bio/picard/markduplicates"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.




Authors
-------


* Johannes Köster



Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2016, Johannes Köster"
    __email__ = "koester@jimmy.harvard.edu"
    __license__ = "MIT"


    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)


    memory = ""
    if "mem_mb" in snakemake.resources.keys():
        memory = "-Xmx{}M".format(snakemake.resources["mem_mb"])

    shell(
        "picard MarkDuplicates "
        "{memory} {snakemake.params} INPUT={snakemake.input} "
        "OUTPUT={snakemake.output.bam} METRICS_FILE={snakemake.output.metrics} "
        "{log}"
    )
