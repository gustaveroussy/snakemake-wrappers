.. _`epic`:

EPIC
====

Find broad enriched domains in ChIP-Seq data with epic




Software dependencies
---------------------


* epic =0.2.7

* pandas =0.22.0




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule epic:
        input:
          treatment = "bed/test.bed",
          background = "bed/control.bed"
        output:
          enriched_regions = "epic/enriched_regions.csv", # required
          bed = "epic/enriched_regions.bed", # optional
          matrix = "epic/matrix.gz" # optional
        log:
            "logs/epic/epic.log"
        params:
          genome = "hg19", # optional, default hg19
          extra="-g 3 -w 200" # "--bigwig epic/bigwigs"
        threads: 1 # optional, defaults to 1
        wrapper:
            "0.50.4-48-ga564007/bio/epic/peaks"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.



Notes
-----

* All/any of the different bigwig options must be given as extra parameters




Authors
-------


* Endre Bakken Stovner



Code
----

.. code-block:: python

    __author__ = "Endre Bakken Stovner"
    __copyright__ = "Copyright 2017, Endre Bakken Stovner"
    __email__ = "endrebak85@gmail.com"
    __license__ = "MIT"


    from snakemake.shell import shell

    # Placeholder for optional parameters
    extra = snakemake.params.get("extra", "")
    threads = snakemake.threads or 1

    treatment = snakemake.input.get("treatment")
    background = snakemake.input.get("background")

    # Executed shell command
    enriched_regions = snakemake.output.get("enriched_regions")

    bed = snakemake.output.get("bed")
    matrix = snakemake.output.get("matrix")

    if len(snakemake.log) > 0:
        log = snakemake.log[0]

    genome = snakemake.params.get("genome")

    cmd = "epic -cpu {threads} -t {treatment} -c {background} -o {enriched_regions} -gn {genome}"

    if bed:
        cmd += " -b {bed}"
    if matrix:
        cmd += " -sm {matrix}"
    if log:
        cmd += " -l {log}"

    cmd += " {extra}"

    shell(cmd)
