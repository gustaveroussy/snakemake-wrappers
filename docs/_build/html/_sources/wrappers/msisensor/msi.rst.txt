.. _`MSIsensor msi`:

MSISENSOR MSI
=============

Score your MSI with MSIsensor



Software dependencies
---------------------


* msisensor ==0.5




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_msisensor_msi:
        input:
            normal = "example.normal.bam",
            tumor = "example.tumor.bam",
            microsat = "example.microsate.sites"
        output:
            "example.msi",
            "example.msi_dis",
            "example.msi_germline",
            "example.msi_somatic"
        message:
            "Testing MSIsensor msi"
        threads:
            1
        log:
            "example.log"
        params:
            out_prefix = "example.msi"
        wrapper:
            "0.60.1-163-g34160919/bio/msisensor/msi"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.




Authors
-------




Code
----

.. code-block:: python

    """Snakemake script for MSISensor msi"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Dayris Thibault"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"

    from os.path import commonprefix
    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    # Extra parameters default value is an empty string
    extra = snakemake.params.get("extra", "")

    # Detemining common prefix in output files
    # to fill the requested parameter '-o'
    prefix = commonprefix(snakemake.output)

    shell(
        "msisensor msi"  # Tool and its sub-command
        " -d {snakemake.input.microsat}"  # Path to homopolymer/microsat file
        " -n {snakemake.input.normal}"  # Path to normal bam
        " -t {snakemake.input.tumor}"  # Path to tumor bam
        " -o {prefix}"  # Path to output distribution file
        " -b {snakemake.threads}"  # Maximum number of threads used
        " {extra}"  # Optional extra parameters
        " {log}"  # Logging behavior
    )
