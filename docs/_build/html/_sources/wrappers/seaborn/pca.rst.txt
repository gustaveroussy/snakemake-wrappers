.. _`PCA`:

PCA
===

Perform PCA on normalized counts





Example
-------

This meta-wrapper can be used in the following way:

.. code-block:: python

    rule test_seaborn_pca:
        input:
            counts = "table.tsv"
        output:
            png = ["pca_PC1_PC2.png", "pca_PC2_PC1.png"]
        message:
            "Testing Seaborn PCA"
        threads:
            1
        resources:
            mem_mb = (
                lambda wildcards, attempt: min(attempt * 512, 1024)
            ),
            time_min = (
                lambda wildcards, attempt: min(attempt * 10, 20)
            )
        params:
            conditions = {"A": "CondA", "B": "CondB"},
            axes = [1, 2]
        log:
            "logs/test_seaborn_pca.log"
        wrapper:
            "0.65.0-211-g6a5c5194/bio/seaborn/pca"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.



Notes
-----

Parameters:

* conditions: List of conditions to color the PCA points
* prefix: The output file prefix (_PCXX_PCYY.png will be added)
* legend_position: The position of the legend and title
* axes: the axis to plot




Authors
-------


* Thibault Dayris



Code
----


