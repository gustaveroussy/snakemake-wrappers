.. _`star`:

STAR
====

Map reads with STAR.





Example
-------

This meta-wrapper can be used in the following way:

.. code-block:: python

    rule star_pe_multi:
        input:
            # use a list for multiple fastq files for one sample
            # usually technical replicates across lanes/flowcells
            fq1 = ["reads/{sample}_R1.1.fastq", "reads/{sample}_R1.2.fastq"],
            # paired end reads needs to be ordered so each item in the two lists match
            fq2 = ["reads/{sample}_R2.1.fastq", "reads/{sample}_R2.2.fastq"] #optional
        output:
            # see STAR manual for additional output files
            "star/pe/{sample}/Aligned.out.sam"
        log:
            "logs/star/pe/{sample}.log"
        params:
            # path to STAR reference genome index
            index="index",
            # optional parameters
            extra=""
        threads: 8
        wrapper:
            "0.65.0-211-g6a5c5194/bio/star/align"

    rule star_se:
        input:
            fq1 = "reads/{sample}_R1.1.fastq"
        output:
            # see STAR manual for additional output files
            "star/{sample}/Aligned.out.sam"
        log:
            "logs/star/{sample}.log"
        params:
            # path to STAR reference genome index
            index="index",
            # optional parameters
            extra=""
        threads: 8
        wrapper:
            "0.65.0-211-g6a5c5194/bio/star/align"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.




Authors
-------


* Johannes Köster

* Tomás Di Domenico



Code
----


