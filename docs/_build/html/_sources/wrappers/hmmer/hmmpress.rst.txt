.. _`bio/hmmer/hmmpress`:

HMMPRESS
========

Format an HMM database into a binary format for hmmscan.


Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule hmmpress_profile:
        input:
            "test-profile.hmm"
        output:
            "test-profile.hmm.h3f",
            "test-profile.hmm.h3i",
            "test-profile.hmm.h3m",
            "test-profile.hmm.h3p"
        log:
            "logs/hmmpress.log"
        params:
            extra="",
        threads: 4
        wrapper:
            "0.72.0-504-g15bd6157e/bio/hmmer/hmmpress"

Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``hmmer=3.2.1``

Input/Output
------------
**Input:**

* hmm database

**Output:**

* binary format hmm database (for hmmscan)




Authors
-------

* N Tessa Pierce


Code
----

.. code-block:: python

    """Snakemake wrapper for hmmpress"""

    __author__ = "N. Tessa Pierce"
    __copyright__ = "Copyright 2019, N. Tessa Pierce"
    __email__ = "ntpierce@gmail.com"
    __license__ = "MIT"

    from os import path
    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    # -f Force; overwrites any previous hmmpress-ed datafiles. The default is to bitch about any existing files and ask you to delete them first.

    shell("hmmpress -f {snakemake.input} {log}")
