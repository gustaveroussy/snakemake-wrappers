.. _`complement`:

COMPLEMENT
==========

Compute all genomic intervals that are not covered by at least
one record from the input file.



Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_bedtools_complement:
        input:
            intervals = "intervals.bed",
            genome = "small.genome"
        output:
            "complement.bed"
        message:
            "Testing bedtools complement"
        threads:
            1
        resources:
            mem_mb = (
                lambda wildcards, attempt: min(attempt * 1024, 10240)
            ),
            time_min = (
                lambda wildcards, attempt: min(attempt * 20, 200)
            )
        log:
            "logs/test_bedtools_complement.log"
        wrapper:
            "0.67.0-343-g892df8bb/bio/bedtools/complement"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bedtools==2.29.0``

Input/Output
------------
**Input:**

* BED/GFF/VCF formatted intervals
* genome intervals

**Output:**

* BED formatted complement



Notes
-----

Eventhough it is not mentionned in the official documentation:

* GTF seems to be accepted as well as GFF.
* genome intervals is a two columned bed file.



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for bedtools complement"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    from snakemake.shell import shell
    log = snakemake.log_fmt_shell(stdout=False, stderr=True)

    extra = snakemake.params.get("extra", "")

    shell(
        "bedtools complement "
        " {extra} "
        " -i {snakemake.input.intervals} "
        " -g {snakemake.input.genome} "
        " > {snakemake.output} "
        " {log} "
    )
