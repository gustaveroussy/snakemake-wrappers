.. _`gatk BaseRecalibrator`:

GATK BASERECALIBRATOR
=====================

Run gatk BaseRecalibrator.




Software dependencies
---------------------


* gatk4 ==4.1.4.1

* openjdk =8




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule gatk_baserecalibrator:
        input:
            bam="mapped/{sample}.bam",
            ref="genome.fasta",
            dict="genome.dict",
            known="dbsnp.vcf.gz"  # optional known sites
        output:
            recal_table="recal/{sample}.grp"
        log:
            "logs/gatk/baserecalibrator/{sample}.log"
        params:
            extra="",  # optional
            java_opts="", # optional
        wrapper:
            "0.64.0-176-g1bc8b0a3/bio/gatk/baserecalibrator"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.



Notes
-----

* The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.
* The `extra` param alllows for additional program arguments.
* For more inforamtion see, https://software.broadinstitute.org/gatk/documentation/article?id=11050




Authors
-------


* Christopher Schröder

* Johannes Köster

* Jake VanCampen



Code
----

.. code-block:: python

    __author__ = "Christopher Schröder"
    __copyright__ = "Copyright 2020, Christopher Schröder"
    __email__ = "christopher.schroeder@tu-dortmund.de"
    __license__ = "MIT"


    from snakemake.shell import shell

    extra = snakemake.params.get("extra", "")
    java_opts = snakemake.params.get("java_opts", "")

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    known = snakemake.input.get("known", "")
    if known:
        known = "--known-sites {}".format(known)

    shell(
        "gatk --java-options '{java_opts}' BaseRecalibrator {extra} "
        "-R {snakemake.input.ref} -I {snakemake.input.bam} "
        "-O {snakemake.output.recal_table} {known} {log}"
    )
