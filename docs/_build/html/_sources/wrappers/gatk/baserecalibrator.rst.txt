.. _`gatk BaseRecalibrator`:

GATK BASERECALIBRATOR
=====================

Run gatk BaseRecalibrator and ApplyBQSR in one step.




Software dependencies
---------------------


* gatk4 ==4.1.4.1

* openjdk =8




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule gatk_bqsr:
        input:
            bam="mapped/{sample}.bam",
            ref="genome.fasta",
            known="dbsnp.vcf.gz"  # optional known sites
        output:
            bam="recal/{sample}.bam"
        log:
            "logs/gatk/bqsr/{sample}.log"
        params:
            extra="",  # optional
            java_opts="", # optional
        wrapper:
            "0.50.4-5-g87e8958/bio/gatk/baserecalibrator"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.



Notes
-----

* The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.
* The `extra` param alllows for additional program arguments.
* For more inforamtion see, https://software.broadinstitute.org/gatk/documentation/article?id=11050




Authors
-------


* Johannes Köster

* Jake VanCampen



Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2018, Johannes Köster"
    __email__ = "johannes.koester@protonmail.com"
    __license__ = "MIT"


    from tempfile import TemporaryDirectory
    import os

    from snakemake.shell import shell

    extra = snakemake.params.get("extra", "")
    java_opts = snakemake.params.get("java_opts", "")

    with TemporaryDirectory() as tmpdir:
        recal_table = os.path.join(tmpdir, "recal_table.grp")
        log = snakemake.log_fmt_shell(stdout=True, stderr=True)
        known = snakemake.input.get("known", "")
        if known:
            known = "--known-sites {}".format(known)

        shell(
            "gatk --java-options '{java_opts}' BaseRecalibrator {extra} "
            "-R {snakemake.input.ref} -I {snakemake.input.bam} "
            "-O {recal_table} {known} {log}"
        )

        log = snakemake.log_fmt_shell(stdout=True, stderr=True, append=True)
        shell(
            "gatk --java-options '{java_opts}' ApplyBQSR -R {snakemake.input.ref} -I {snakemake.input.bam} "
            "--bqsr-recal-file {recal_table} "
            "-O {snakemake.output.bam} {log}"
        )
