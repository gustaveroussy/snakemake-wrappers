.. _`gatk SplitNCigarReads`:

GATK SPLITNCIGARREADS
=====================

Run gatk SplitNCigarReads.




Software dependencies
---------------------


* gatk4 ==4.1.4.1




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule splitncigarreads:
        input:
            bam="mapped/{sample}.bam",
            ref="genome.fasta"
        output:
            "split/{sample}.bam"
        log:
            "logs/gatk/splitNCIGARreads/{sample}.log"
        params:
            extra="",  # optional
            java_opts="",  # optional
        wrapper:
            "0.64.0-188-g0db15379/bio/gatk/splitncigarreads"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.



Notes
-----

* The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.
* The `extra` param alllows for additional program arguments.
* For more inforamtion see, https://software.broadinstitute.org/gatk/documentation/article?id=11050




Authors
-------


* Jan Forster



Code
----

.. code-block:: python

    __author__ = "Jan Forster"
    __copyright__ = "Copyright 2019, Jan Forster"
    __email__ = "jan.forster@uk-essen.de"
    __license__ = "MIT"

    import os

    from snakemake.shell import shell

    extra = snakemake.params.get("extra", "")
    java_opts = snakemake.params.get("java_opts", "")

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    shell(
        "gatk --java-options '{java_opts}' SplitNCigarReads {extra} "
        " -R {snakemake.input.ref} -I {snakemake.input.bam} "
        "-O {snakemake.output} {log}"
    )
