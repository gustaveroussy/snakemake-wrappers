.. _`bio/gatk/genotypegvcfs`:

GATK GENOTYPEGVCFS
==================

Run gatk GenotypeGVCFs.



Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule genotype_gvcfs:
        input:
            gvcf="calls/all.g.vcf",  # combined gvcf over multiple samples
            ref="genome.fasta"
        output:
            vcf="calls/all.vcf",
        log:
            "logs/gatk/genotypegvcfs.log"
        params:
            extra="",  # optional
            java_opts="", # optional
        # optional specification of memory usage of the JVM that snakemake will respect with global
        # resource restrictions (https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#resources)
        # and which can be used to request RAM during cluster job submission as `{resources.mem_mb}`:
        # https://snakemake.readthedocs.io/en/latest/executing/cluster.html#job-properties
        resources:
            mem_mb=1024
        wrapper:
            "0.72.0-628-g7174a7dc2/bio/gatk/genotypegvcfs"

Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``gatk4==4.2.0.0``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* GVCF files

**Output:**

* VCF file with genotypes



Notes
-----

* The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.
* The `extra` param alllows for additional program arguments.
* For more inforamtion see, https://software.broadinstitute.org/gatk/documentation/article?id=11050



Authors
-------

* Johannes Köster
* Jake VanCampen


Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2018, Johannes Köster"
    __email__ = "johannes.koester@protonmail.com"
    __license__ = "MIT"


    import os

    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts


    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    shell(
        "gatk --java-options '{java_opts}' GenotypeGVCFs {extra} "
        "-V {snakemake.input.gvcf} "
        "-R {snakemake.input.ref} "
        "-O {snakemake.output.vcf} {log}"
    )
