.. _`gatk SelectVariants`:

GATK SELECTVARIANTS
===================

Run gatk SelectVariants.




Software dependencies
---------------------


* gatk4 ==4.1.4.1




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule gatk_select:
        input:
            vcf="calls/all.vcf",
            ref="genome.fasta",
        output:
            vcf="calls/snvs.vcf"
        log:
            "logs/gatk/select/snvs.log"
        params:
            extra="--select-type-to-include SNP",  # optional filter arguments, see GATK docs
            java_opts="", # optional 
        wrapper:
            "0.64.0-188-g0db15379/bio/gatk/selectvariants"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.



Notes
-----

* The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.
* The `extra` param alllows for additional program arguments.
* For more inforamtion see, https://software.broadinstitute.org/gatk/documentation/article?id=11050




Authors
-------


* Johannes Köster

* Jake VanCampen



Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2018, Johannes Köster"
    __email__ = "johannes.koester@protonmail.com"
    __license__ = "MIT"


    from snakemake.shell import shell

    extra = snakemake.params.get("extra", "")
    java_opts = snakemake.params.get("java_opts", "")

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    shell(
        "gatk --java-options '{java_opts}' SelectVariants -R {snakemake.input.ref} -V {snakemake.input.vcf} "
        "{extra} -O {snakemake.output.vcf} {log}"
    )
