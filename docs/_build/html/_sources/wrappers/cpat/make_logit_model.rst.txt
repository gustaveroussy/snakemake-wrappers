.. _`make_logit_model`:

MAKE_LOGIT_MODEL
================

Build a model from hexamer_table



Software dependencies
---------------------


* bioconda:cpat=2.0.0




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_cpat_make_logit_model:
        input:
            coding =
            noncoding =
            hexamer_table =
            reference =
        output:
            "logit_model"
        wrapper:
            "0.64.0-188-g0db15379/bio/cpat/make_logit_model"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.




Authors
-------


* Thibault Dayris



Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for CPAT make_legit_model.py"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    from snakemake.shell import shell
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    extra = snakemake.params.get("extra", "")
    prefix = snakemake.output[0]

    reference = ""
    if "reference" in snakemake.input.keys():
        reference = "--ref {snakemake.input['reference']}"

    shell(
        " make_logitModel.py "
        " --cgene {snakemake.input['coding']} "
        " --ngene {snakemake.input['noncoding']} "
        " --hex {snakemake.input['hexamer_table']} "
        " --outfile {prefix} "
        " {reference} "
        " {extra} "
        " {log} "
    )
