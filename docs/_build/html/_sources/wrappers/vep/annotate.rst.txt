.. _`vep annotate`:

VEP ANNOTATE
============

Annotate variant calls with VEP.





Example
-------

This meta-wrapper can be used in the following way:

.. code-block:: python

    rule annotate_variants:
        input:
            calls="variants.bcf",  # .vcf, .vcf.gz or .bcf
            cache="resources/vep/cache",
            plugins="resources/vep/plugins",
            # optionally add reference genome fasta to speed up annotation
            # fasta="genome.fasta",
        output:
            calls="variants.annotated.bcf",  # .vcf, .vcf.gz or .bcf
            stats="variants.html"
        params:
            # Pass a list of plugins to use, see https://www.ensembl.org/info/docs/tools/vep/script/vep_plugins.html
            # Plugin args can be added as well, e.g. via an entry "MyPlugin,1,FOO", see docs.
            plugins=["LoFtool"],
            extra="--everything"  # optional: extra arguments
        log:
            "logs/vep/annotate.log"
        threads: 4
        wrapper:
            "0.65.0-212-g458009d7/bio/vep/annotate"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.




Authors
-------


* Johannes KÃ¶ster



Code
----


