.. _`Homer findPeaks`:

HOMER FINDPEAKS
===============

Find enriched peaks or regions with the Homer suite.



Software dependencies
---------------------


* homer ==4.11




Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule homer_findPeaks:
        input:
            # tagDirectory of sample
            tag="tagDir/{sample}",
            # tagDirectory of control background sample - optional
            control="tagDir/control"
        output:
            "{sample}_peaks.txt"
        params:
            # one of 7 basic modes of operation, see homer manual
            style="histon",
            extra=""  # optional params, see homer manual
        log:
            "logs/findPeaks/{sample}.log"
        wrapper:
            "0.60.1-163-g34160919/bio/homer/findPeaks"


Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.




Authors
-------


* Jan Forster



Code
----

.. code-block:: python

    __author__ = "Jan Forster"
    __copyright__ = "Copyright 2020, Jan Forster"
    __email__ = "j.forster@dkfz.de"
    __license__ = "MIT"

    from snakemake.shell import shell
    import os.path as path
    import sys

    extra = snakemake.params.get("extra", "")
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    control = snakemake.input.get("control", "")
    if control == "":
        control_command = ""
    else:
        control_command = "-i " + control

    shell(
        "(findPeaks"
        " {snakemake.input.tag}"
        " {extra}"
        " {control_command}"
        " -o {snakemake.output})"
        " {log}"
    )
