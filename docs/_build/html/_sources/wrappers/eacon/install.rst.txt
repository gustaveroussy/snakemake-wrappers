.. _`bio/eacon/install`:

EACON INSTALL
=============

Download and install required database and optional scripts for EaCoN


Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_eacon_install:
        output:
            directory("sources")
        log:
            "install.log"
        cache: True
        wrapper:
            "0.71.1-431-g041606a28/bio/eacon/install"

Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``conda-forge:r-devtools=2.3.2``
* ``conda-forge:r-dbi=1.1.0``
* ``conda-forge:r-rsqlite=2.2.1``
* ``conda-forge:r-rmarkdown=2.4``
* ``bioconda:r-eacon=0.3.4_1``
* ``bioconda:bioconductor-bsgenome=1.54.0``
* ``bioconda:bioconductor-bsgenome.hsapiens.ucsc.hg19=1.4.0``
* ``bioconda:bioconductor-bsgenome.hsapiens.ucsc.hg38=1.4.1``
* ``bioconda:bioconductor-bsgenome.hsapiens.1000genomes.hs37d5=0.99.1``
* ``bioconda:bioconductor-affxparser=1.58.0``
* ``bioconda:bioconductor-biostrings=2.54.0``
* ``bioconda:bioconductor-aroma.light=3.16.0``
* ``bioconda:bioconductor-copynumber=1.26.0``
* ``bioconda:bioconductor-genomicranges=1.38.0``
* ``bioconda:bioconductor-rhdf5=2.30.0``
* ``bioconda:bioconductor-limma=3.42.0``
* ``bioconda:r-sequenza=3.0.0``
* ``bioconda:r-facets=0.5.14``
* ``bioconda:cnv_facets=0.16.0``
* ``bioconda:ascat=2.5.2``

Input/Output
------------
**Input:**

* None

**Output:**

* Multiple packages/database



Notes
-----

Parameters:

* OncoScan: Install array specific libraries
* OncoScanCNV: Install array specific libraries
* CytoScan750K: Install array specific libraries
* CytoScanHD: Install array specific libraries
* norm: Install normalization methods (required for EaCoN)
* EaCoN_dev: Install development version of EaCoN (overloads conda install)



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/bin/python3.8

    # This wrapper downloads and install optional EaCoN packages

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"

    from snakemake.utils import makedirs
    from snakemake.shell import shell
    log = snakemake.log_fmt_shell(stdout=True, stderr=True, append=True)

    out_dir = snakemake.output[0]
    makedirs(out_dir)

    shell('R --vanilla -e "options(unzip = \'internal\'); Sys.setenv(TAR = \'$(which tar)\'); devtools::install_github(\'gustaveroussy/apt.oncoscan.2.4.0\'); " {log}')
    shell('R --vanilla -e \'options(unzip = "internal"); Sys.setenv(TAR = "$(which tar)"); devtools::install_github("gustaveroussy/apt.cytoscan.2.4.0"); \' {log}')

    if snakemake.params.get("OncoScan", True) is True:
        shell('wget "https://nextcloud.gustaveroussy.fr/s/jrWWJDdpJbaR82o/download" -O {out_dir}/OncoScan.na33.r4_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/OncoScan.na33.r4_0.1.0.tar.gz {log}')

        shell('wget "https://nextcloud.gustaveroussy.fr/s/ZpnYYwmKPzaeHWj/download" -O {out_dir}/OncoScan.na36.r1_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/OncoScan.na36.r1_0.1.0.tar.gz {log}')

    if snakemake.params.get("OncoScanCNV", True) is True:
        shell('wget "https://nextcloud.gustaveroussy.fr/s/BanRj6fAn4HFAA5/download" -O {out_dir}/OncoScanCNV.na33.r2_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/OncoScanCNV.na33.r2_0.1.0.tar.gz {log}')

        shell('wget "https://nextcloud.gustaveroussy.fr/s/MQ9LwiZAHxnzJ2D/download" -O {out_dir}/OncoScanCNV.na36.r1_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/OncoScanCNV.na36.r1_0.1.0.tar.gz {log}')


    if snakemake.params.get("CytoScan750K", True) is True:
        shell('wget "https://nextcloud.gustaveroussy.fr/s/zx6iwPNKxX798Zg/download" -O {out_dir}/CytoScan750K.Array.na33.r4_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/CytoScan750K.Array.na33.r4_0.1.0.tar.gz {log}')

        shell('wget "https://nextcloud.gustaveroussy.fr/s/riXGCQNBENdkQSM/download" -O {out_dir}/CytoScan750K.Array.na36.r1_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/CytoScan750K.Array.na36.r1_0.1.0.tar.gz {log}')

    if snakemake.params.get("CytoScanHD", True) is True:
        shell('wget "https://nextcloud.gustaveroussy.fr/s/ip294gysJdcccYm/download" -O {out_dir}/CytoScanHD.Array.na33.r4_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/CytoScanHD.Array.na33.r4_0.1.0.tar.gz {log}')

        shell('wget "https://nextcloud.gustaveroussy.fr/s/SjRmBFreAee9mqD/download" -O {out_dir}/CytoScanHD.Array.na36.r1_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/CytoScanHD.Array.na36.r1_0.1.0.tar.gz {log}')

    if snakemake.params.get("genomewide", False) is True:
        shell('R --vanilla CMD \'install_github("gustaveroussy/apt.snp6.1.20.0");\' {log}')
        shell('wget "https://nextcloud.gustaveroussy.fr/s/46iyPjPPjFsni5S/download" -O {out_dir}/GenomeWideSNP.6.na35.r1_0.1.0.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/GenomeWideSNP.6.na35.r1_0.1.0.tar.gz {log}')

    if snakemake.params.get("norm", True) is True:
        shell('wget "https://nextcloud.gustaveroussy.fr/s/Zc7JR3QaAk6rFBi/download" -O {out_dir}/rcnorm_0.1.5.tar.gz {log}')
        shell('R  --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/rcnorm_0.1.5.tar.gz {log}')

        shell('wget "https://nextcloud.gustaveroussy.fr/s/gfLnN8xrndFHMdM/download" -O {out_dir}/affy.CN.norm.data_0.1.2.tar.gz {log}')
        shell('R --vanilla CMD INSTALL --clean --data-compress=gzip {out_dir}/affy.CN.norm.data_0.1.2.tar.gz {log}')

    if snakemake.params.get("EaCoN_dev", False) is True:
        shell('R --vanilla -e \'options(unzip = "internal"); Sys.setenv(TAR = \"$(which tar)\"); devtools::install_github("gustaveroussy/EaCoN", force=TRUE); \' {log}')
