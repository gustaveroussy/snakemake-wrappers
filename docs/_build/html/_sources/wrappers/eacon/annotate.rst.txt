.. _`bio/eacon/annotate`:

EACON_ANNOTATE
==============

Annotate your segments with EaCoN


Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_eacon_annotate:
        input:
            rds = "{sample}/ASCAT/L2R/{sample}.SEG.ASCAT.RDS",
            grd = "grd.pl",
            database = "database"
        output:
            multiext(
                "{sample}/ASCAT/L2R/{sample}",
                ".BAF.png",
                ".Cut.acbs",
                ".Instab.txt",
                ".INT.png",
                ".L2R.G.png",
                ".L2R.K.png",
                ".TargetGenes.txt",
                ".TruncatedGenes.txt"
            ),
            expand(
                "{sample}/ASCAT/L2R/chromosomes/{chromosome}",
                chromosome = [f"chr{i}.png" for i in list(map(str, range(1, 23))) + ["X", "Y"]],
                allow_missing=True
            ),
            "{sample}/ASCAT/L2R/{sample}.REPORT.html",
            directory("{sample}/ASCAT/L2R/{sample}_solo.hg19")
        wrapper:
            "v0.69.0-416-gc814694dd/bio/eacon/annotate"

Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``conda-forge:r-devtools=2.3.2``
* ``conda-forge:r-dbi=1.1.0``
* ``conda-forge:r-rsqlite=2.2.1``
* ``conda-forge:r-rmarkdown=2.4``
* ``bioconda:r-eacon=0.3.4_1``
* ``bioconda:bioconductor-bsgenome=1.54.0``
* ``bioconda:bioconductor-bsgenome.hsapiens.ucsc.hg19=1.4.0``
* ``bioconda:bioconductor-bsgenome.hsapiens.ucsc.hg38=1.4.1``
* ``bioconda:bioconductor-bsgenome.hsapiens.1000genomes.hs37d5=0.99.1``
* ``bioconda:bioconductor-affxparser=1.58.0``
* ``bioconda:bioconductor-biostrings=2.54.0``
* ``bioconda:bioconductor-aroma.light=3.16.0``
* ``bioconda:bioconductor-copynumber=1.26.0``
* ``bioconda:bioconductor-genomicranges=1.38.0``
* ``bioconda:bioconductor-rhdf5=2.30.0``
* ``bioconda:bioconductor-limma=3.42.0``
* ``bioconda:r-sequenza=3.0.0``
* ``bioconda:r-facets=0.5.14``
* ``bioconda:cnv_facets=0.16.0``
* ``bioconda:ascat=2.5.2``

Input/Output
------------
**Input:**

* A RDS file
* A GRD script
* A set of databases

**Output:**

* A RDS file



Notes
-----

Use extra parameters to st optional arguments

Warning: This is very deeply linked to Gustave Roussy institute internal usage. GRD is not maintained and not easily share-able.



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: R

    #!/bin/R

    # This is the snakemake wrapper for EaCoN annotate

    # __author__ = "Thibault Dayris"
    # __copyright__ = "Copyright 2020, Thibault Dayris"
    # __email__ = "thibault.dayris@gustaveroussy.fr"
    # __license__ = "MIT"

    library(package = "EaCoN", quietly = TRUE);
    library(package = "devtools", quietly = TRUE);

    # Load user data
    rds_path <- base::as.character(
      x = snakemake@input[["rds"]]
    )

    extra <- "";
    if ("extra" %in% base::names(snakemake@params)) {
      extra <- base::paste0(
        ", ",
        base::as.character(x = snakemake@params[["extra"]])
      );
    }

    grd_path <- base::normalizepath(
      path = base::as.character(x=snakemake@input[["grd"]])
    );

    base::Sys.setenv(
      PATH = paste(
        base::Sys.getenv("PATH"),
        grd_path,
        sep=":"
      )
    );

    # Build command line
    command <- base::paste0(
      "EaCoN::ASCN.ff(",
      "RDS.file = rds_path, ",
      "grd = grd_path, "
      extra,
      ")"
    );

    # Run EaCoN
    base::eval(
      base::parse(
        text = command
      )
    );


    base::Sys.setenv(
      PATH = paste(
        base::Sys.getenv("PATH"),
        snakemake@config[["params"]][["scripts"]],
        sep=":"
      )
    );

    EaCoN::Annotate.ff(
      RDS.file = snakemake@input[["rds"]],
      author.name = "STRonGR",
      ldb = snakemake@input[["ldb"]],
      solo = TRUE
    );
