.. _`bio/mixcr/align`:

MIXCR ALIGN
===========

align raw sequencing reads to reference V, D, J and C genes of T- and B- cell receptors with `mixcr <https://mixcr.readthedocs.io/en/master/align.html>`_


Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_mixcr_align:
        input:
            "sequences.fastq"
        output:
            vdjca = "alignment.vdjca",
            report = "alignment.txt"
        params:
            species = "hs",
            extra = ""
        wrapper:
            "0.72.0-536-g926c55fd1/bio/mixcr/align"

Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``mixcr==3.0.3``

Input/Output
------------
**Input:**

* Sequences in Fasta or Fastq formats, gzipped or not.

**Output:**

* Alignments




Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for mixcr align"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"

    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    extra = snakemake.params.get("extra", "")
    species = snakemake.params.get("species", "hsa")


    if "report" in snakemake.output.keys():
        extra += " --report {} ".format(snakemake.output["report"])


    shell(
        "mixcr align --species {species} {extra} --threads {snakemake.threads} "
        "{snakemake.input} {snakemake.output.vdjca} {log}"
    )
