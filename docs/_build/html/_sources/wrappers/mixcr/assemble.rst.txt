.. _`bio/mixcr/assemble`:

MIXCR ASSEMBLE
==============

Build clonotypes from alignments obtained with `mixcr <https://mixcr.readthedocs.io/en/master/assemble.html>`_.


Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_mixcr_assemble:
        input:
            "alignment.vdjca"
        output:
            clones="assembly.clna",
            report="report.txt"
        params:
            extra="-a"
        wrapper:
            "0.74.0-704-gdc994bc6a/bio/mixcr/assemble"

Note that input, output and log file paths can be chosen freely.
When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``mixcr==3.0.3``

Input/Output
------------
**Input:**

* Aligned sequences from mixcr

**Output:**

* Clonotypes



Notes
-----

It is strongly encouraged to name your output file: *.clna when the `-a/--write-alignments` is used, and *.clns otherwise.



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for mixcr assemble"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"

    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    extra = snakemake.params.get("extra", "")


    if "report" in snakemake.output.keys():
        extra += " --report {} ".format(snakemake.output["report"])


    shell(
        "mixcr assemble {extra} --threads {snakemake.threads} "
        "{snakemake.input} {snakemake.output.clones} {log}"
    )
